package arvore;

public class No {
	private Integer info;=null
	private No direita=null;
	private No esquerda=null;
	public No(Integer info) {
		this.info = info;
	}
	public void add(Integer info) {
		if(info > this.info) {
			if(this.direita != null) {
				this.direita.add(info);
			}else {
				this.direita = new No(info);
			}
		}else if(info < this.info) {
			if(this.esquerda != null) {
				this.esquerda.add(info);
			}else {
				this.esquerda = new No(info);
			}
		}
	}
	
	private int compareTo(Integer info) {
		if(info==null) return 0;
		if(this.info>info) return -1;
		if(this.info<info) return 1;
		return 0;
	}
	public int maior(No raiz) {
		if(raiz.direita == null) return raiz.info;
		return maior(raiz.direita);
	}
	public int menor(No raiz) {
		if(raiz.esquerda == null) return raiz.info;
		return menor(raiz.esquerda);
	}
	public No remove(Integer info,No raiz) {
		if(raiz==null) {
			return raiz;
		}
		if(info > raiz.info) {
			return remove(info,raiz.direita);
		}else if(info < raiz.info) {
			return remove(info,raiz.esquerda);
		}else {
			if(raiz.esquerda == null && raiz.direita == null) {
				raiz.info = null;
			}else if(raiz.esquerda == null) {
				raiz.info = menor(raiz.direita);
				raiz.direita = remove(raiz.info,raiz.direita);
			}else {
				raiz.info = maior(raiz.esquerda);
				raiz.esquerda = remove(raiz.info,raiz.esquerda);
			}
			return raiz;
		}
		
	}
	

}
